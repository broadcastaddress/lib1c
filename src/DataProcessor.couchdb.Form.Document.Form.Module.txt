var _schema;
var _data;

function init(data=undefined,schema=undefined) export
    _schema=undefined;
    _data=new map();
    if schema<>undefined then
        _schema=new map();
        if check.is_structure_or_map(schema) then
            for each item in schema do
                assert.is_string(item.key,"couchdb.Document","string key required");
                _schema.insert(item.key,null);
            enddo;
        else
            raise exception.TypeError();
        endif;
    endif;
    if check.is_structure_or_map(data) then
        thisform.update(data);
    else
        raise exception.ValueError();
    endif;
    return thisform;
endfunction

function dispatch() export
    return _data;
endfunction

function get(k) export
    return _data[k];
endfunction

function set(k,v) export
    _data[k]=v;
    return thisform;
endfunction

function del(k) export
    _data.delete(k);
    return thisform;
endfunction

function has(k) export
    return check.hasattr(_data,k);
endfunction

function genid(args=undefined)
    if args=undefined then
        return string(new UUID());
    else
        return string(args);
    endif;
endfunction

function clear() export
    id=undefined;rev=undefined;
    if check.hasattr(_data,"_id") then
        id=thisform.get("_id");
    endif;
    if check.hasattr(_data,"_rev") then
        rev=thisform.get("_rev");
    endif;
    _data=new map();
    if _schema<>undefined then
        for each item in _schema do
            thisform.set(item.key,null);
        enddo;
    endif;
    if id<>undefined then
        thisform.set("_id",id);
    endif;
    if rev<>undefined then
        thisform.set("_rev",rev);
    endif;
    return thisform;
endfunction

function update(data) export
    for each item in data do
        if _schema<>undefined then
            if _schema.get(item.key)=null then
                thisform.set(item.key,item.value);
            endif;
        else
            thisform.set(item.key,item.value);
        endif;
    enddo;
    return thisform;
endfunction