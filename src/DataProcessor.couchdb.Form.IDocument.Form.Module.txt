var _document;
var _initialized;

function init(doc,data=undefined,schema=undefined) export
    if _initialized then
        // идея переинициализации документа с целью сделать из него
        // контейнер интересна, но противоречит логики его использования.
        // Если очень надо, можете снять это ограничение вручную.
        raise exception.StateError("Document is already initialized");
    endif;
    if _document=undefined then
        _document=doc;
    endif;
    if not _initialized and schema<>undefined then
        _document.set_schema(schema);
    endif;
    if data<>undefined then
        _document.init(data);
        _initialized=True;
    endif;
    return thisform;
endfunction

//function dispatch()
//  Преобразовывает документ в стандартный тип данных 1С.
//
//  Возвращает:
//      <map>
//
function dispatch() export
    res=_document.dispatch();
    if check.is_map(res) then
        return res;
    else
        raise exception.TypeError("Document.dispatch() must return <map>",
                                  new Structure("res",res));
    endif;
endfunction

//function get(k)
//  Возвращает значение документа по ключу k
//
//  Параметры:
//      k <string> -- имя ключа
//
//  Возвращает:
//      <any>
//
function get(k) export
    return _document.get(k);
endfunction

//function set(k,v)
//  Устанавливает значение документа по ключу k
//
//  Параметры:
//      k <string> -- имя ключа
//      v <any> -- значение
//
//  Возвращает:
//      thisform
//
function set(k,v) export
    _document.set(k,v);
    return thisform;
endfunction

//function del(k,v)
//  Удаляет данные документа по ключу k
//
//  Параметры:
//      k <string> -- имя ключа
//
//  Возвращает:
//      thisform
//
function del(k) export
    _document.del(k);
    return thisform;
endfunction

function has(k) export
    return _document.has(k);
endfunction

//function load(db,id)
//  Загружает данные документа из базы db по id
//
//  Параметры:
//      db <CouchDB.Database> -- объект базы
//      id <stirng> -- id загружаемого документа
//
//  Возвращает:
//      thisform
//
function load(db,id) export
    init(_document,db.get(id));
    return thisform;
endfunction

//function store(db)
//  Сохраняет документ в базе CouchDB
//
//  Параметры:
//      db <CouchDB.Database> -- объект базы
//
//  Возвращает:
//      thisform
//
function store(db) export
    db.save(thisform);
    return thisform;
endfunction

function genid(args=undefined) export
    return _document.genid(args);
endfunction

function update(expr) export
    _document.update(expr);
    return thisform;
endfunction

_initialized=False;