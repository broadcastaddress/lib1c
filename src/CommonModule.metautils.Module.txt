//function guess_type(metaobject)
//  Угадывает тип переданного объекта метаданных.
//
//  Параметры:
//      metaobject -- объект метаданных
//
//  Возвращает:
//      <object manager>
//
//  Описание:
//      Чтобы не быть зависимым от локали системы, возвращает менеджер
//      семейства объетов данного типа. Например, если была переданна
//      ссылка на объект справочники, то будет возвращен менеджер всех
//      справочников.
//
function guess_type(metaobject,supposed_type=undefined) export
    metainfo=?(typeof(metaobject)=type("metadataobject"),
                metaobject,metadata.findbytype(typeof(metaobject)));
    if metainfo=undefined then
        raise exception.ValueError("Metadata object expected",
                                    new Structure("metaobject",metaobject));
    endif;
    _map=new map();
    _map.insert(Catalogs,metadata.Catalogs);
    _map.insert(Documents,metadata.Documents);
    _map.insert(InformationRegisters,metadata.InformationRegisters);
    _map.insert(ChartsOfCharacteristicTypes,metadata.ChartsOfCharacteristicTypes);
    _map.insert(AccumulationRegisters,metadata.AccumulationRegisters);
    _map.insert(Tasks,metadata.Tasks);
    _map.insert(Constants,metadata.Constants);
    _map.insert(Enums,metadata.Enums);
    _map.insert(ChartsOfAccounts,metadata.ChartsOfAccounts);
    if supposed_type=undefined then
        for each item in _map do
            if item.value.contains(metainfo) then
                return item.key;
            endif;
        enddo;
    else
        return _map[supposed_type].contains(metainfo);
    endif;
    raise exception.ValueError("unsupported metadata value "+metainfo.fullname());
endfunction